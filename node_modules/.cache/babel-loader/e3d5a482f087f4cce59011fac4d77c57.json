{"ast":null,"code":"var _jsxFileName = \"/Users/davidpetrovic/Documents/GitHub/pausalac/src/components/InvoiceList.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient'; // Import the Supabase client\nimport Invoice from './Invoice';\nconst InvoiceList = () => {\n  const [invoices, setInvoices] = useState([]);\n  useEffect(() => {\n    const fetchInvoices = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('invoices').select('*');\n      if (error) {\n        console.error('Error fetching invoices:', error);\n      } else {\n        setInvoices(data);\n      }\n    };\n    fetchInvoices();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, invoices.map(invoice => /*#__PURE__*/React.createElement(Invoice, {\n    key: invoice.id,\n    invoice: invoice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })));\n};\nexport default InvoiceList;","map":{"version":3,"names":["React","useEffect","useState","supabase","Invoice","InvoiceList","invoices","setInvoices","fetchInvoices","data","error","from","select","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","invoice","key","id"],"sources":["/Users/davidpetrovic/Documents/GitHub/pausalac/src/components/InvoiceList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient'; // Import the Supabase client\nimport Invoice from './Invoice';\n\nconst InvoiceList: React.FC = () => {\n    const [invoices, setInvoices] = useState([]);\n\n    useEffect(() => {\n        const fetchInvoices = async () => {\n            const { data, error } = await supabase\n                .from('invoices')\n                .select('*');\n\n            if (error) {\n                console.error('Error fetching invoices:', error);\n            } else {\n                setInvoices(data);\n            }\n        };\n\n        fetchInvoices();\n    }, []);\n\n    return (\n        <div>\n            {invoices.map(invoice => (\n                <Invoice key={invoice.id} invoice={invoice} />\n            ))}\n        </div>\n    );\n};\n\nexport default InvoiceList; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,mBAAmB,CAAC,CAAC;AAC9C,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMP,QAAQ,CACjCQ,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC;MAEhB,IAAIF,KAAK,EAAE;QACPG,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD,CAAC,MAAM;QACHH,WAAW,CAACE,IAAI,CAAC;MACrB;IACJ,CAAC;IAEDD,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACKd,QAAQ,CAACe,GAAG,CAACC,OAAO,iBACjBtB,KAAA,CAAAc,aAAA,CAACV,OAAO;IAACmB,GAAG,EAAED,OAAO,CAACE,EAAG;IAACF,OAAO,EAAEA,OAAQ;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChD,CACA,CAAC;AAEd,CAAC;AAED,eAAef,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}